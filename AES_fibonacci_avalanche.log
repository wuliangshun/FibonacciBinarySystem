input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101011111, output: 01000101000110001010100111010000100001000101010111101100010101010011110000011100010010011110100001111100000101010000111000100111

Test Done. 
++++++++++++++++++ Test avalanche effect  (fibonacci) ++++++++++++++++++++
input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001101011, output: 10110100100101110011100000101000011000110111110000010101100101111010101010110000011000001010001101100111110101001100110001000111
xor:10101110011110010111001010000010110110101100100000100100010111010001010000010011110111000101111000000110011010000011101000000000, cnt: 55

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001011001, output: 10001110111100001010111110010001101111110111001101100010100001111011101011101101100001111000110111001111000000000101000010000101
xor:10010100000111101110010100111011000001101100011101010011010011010000010001001110001110110111000010101110101111001010011011000010, cnt: 62

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000111101, output: 10010110100010100110000011111100110101011100111011101000100101110001110111110110000011111010011001111011011001100110100011110010
xor:10001100011001000010101001010110011011000111101011011001010111011010001101010101101100110101101100011010110110101001111010110101, cnt: 68

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111000111, output: 10100001110110001110110000100100110000111110101110111010001001100101010011000110011001001100001100001110100000000000111001001110
xor:10111011001101101010011010001110011110100101111110001011111011001110101001100101110110000011111001101111001111001111100000001001, cnt: 73

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100110110, output: 00110111001010000010011001011010111000110101110111001011100000000110010000101001001101001111101100110010101010010001011110111010
xor:00101101110001100110110011110000010110101110100111111010010010101101101010001010100010000000011001010011000101011110000111111101, cnt: 64

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100001011001, output: 00011011111010101011000010000011001101100100000010110001010000101000100110010010000100100010001011001101110110000111000100111001
xor:00000001000001001111101000101001100011111111010010000000100010000011011100110001101011101101111110101100011001001000011101111110, cnt: 61

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100010, output: 11000010011001001111101100101010011100101110101111011111000101000111111000101100011110011001110011111111000100101010100110101110
xor:11011000100010101011000110000000110010110101111111101110110111101100000010001111110001010110000110011110101011100101111111101001, cnt: 70

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001010100110, output: 01000100000000110011010010101101000101010101000001010110000011001001101001111011010000011100101001011101011110101101110100011111
xor:01011110111011010111111000000111101011001110010001100111110001100010010011011000111111010011011100111100110001100010101101011000, cnt: 70

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110101110100, output: 10001101010101111010110011000101000100010011000001010000100100001101101101101111011010110101101011000110001101000001110101101010
xor:10010111101110011110011001101111101010001000010001100001010110100110010111001100110101111010011110100111100010001110101100101101, cnt: 69

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101001011011100, output: 10110000110011111110100011100101010111000000000001000010100101000111111110011101111011010100010111101000000011111111110001100101
xor:10101010001000011010001001001111111001011011010001110011010111101100000100111110010100011011100010001001101100110000101000100010, cnt: 60

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011100001110110, output: 00010110100001101001000111110011101011000000011101000111101110001000011010011110001001110101110101101110011111110100100101110010
xor:00001100011010001101101101011001000101011011001101110110011100100011100000111101100110111010000000001111110000111011111100110101, cnt: 66

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100011101010110001, output: 00101011101010100110001000100001010001010010101111111011101110111100000101001010101010010111110100101101011100110011110110101011
xor:00110001010001000010100010001011111111001001111111001010011100010111111111101001000101011000000001001100110011111100101111101100, cnt: 66

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101001101111100, output: 11111101111000100010101011101011011001000010011000011000101010010000111000010000011000000011011010100100001101101100011100111111
xor:11100111000011000110000001000001110111011001001000101001011000111011000010110011110111001100101111000101100010100011000101111000, cnt: 60

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111111100110110111, output: 11010110010001111000111010011010010111100001101000110011010010001001101011101001111001101011100000011000100000000000000111001111
xor:11001100101010011100010000110000111001111010111000000010100000100010010001001010010110100100010101111001001111001111011110001000, cnt: 57

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111101101110111111000, output: 00101001010111111100111100011110111001001000001001000011111101110111001100111101001010101000111010001011011001110011111000110010
xor:00110011101100011000010110110100010111010011011001110010001111011100110110011110100101100111001111101010110110111100100001110101, cnt: 71

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111010101010110000000, output: 00000000100100101000101110011001101101100110010100010110010010110000001100001110101110011110011011110000011010101101001111101000
xor:00011010011111001100000100110011000011111101000100100111100000011011110110101101000001010001101110010001110101100010010110101111, cnt: 63

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101011001, output: 10110010000000100000110010101010011110010101000000101111101111110101101111100000100010001101011011010001110010010110110010111000

Test Done. 
++++++++++++++++++ Test avalanche effect  (fibonacci) ++++++++++++++++++++
input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101011011, output: 01100000111011001001101111000111100011011011110100011010011101010101001010010100100110100101110000010000100000110101000101001011
xor:10111011001010111100110111101010001110000010101010101000001000100111010001100110001111010011010011011111001111101000011011010101, cnt: 67

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100111100, output: 01000110011100111000001011010101110111110110110111001101011000010100100101010110000001110001011000110111001011000010010100001011
xor:10011101101101001101010011111000011010101111101001111111001101100110111110100100101000000111111011111000100100011111001010010101, cnt: 73

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101101111, output: 11100011110000011100110111101101101110001000010010100111000111101110111011000111010001110001100111000110111100100101001100100110
xor:00111000000001101001101111000000000011010001001100010101010010011100100000110101111000000111000100001001010011111000010010111000, cnt: 51

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110101101, output: 11101101010100111001100101111101011011110100011011001010011101011010101111111101101010010000011111111101110000110101011110111100
xor:00110110100101001100111101010000110110101101000101111000001000101000110100001111000011100110111100110010011111101000000000100010, cnt: 59

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001101011, output: 01001100011010110110010000111110010111111000010000100101110001011010001100000010100110111010100010011100101010001110111111110101
xor:10010111101011000011001000010011111010100001001110010111100100101000010111110000001111001100000001010011000101010011100001101011, cnt: 59

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001, output: 11010010100110010000101011100000110100100101101111110100001100001100110010000001110100111000111101011101101100111010100000100011
xor:00001001010111100101110011001101011001111100110001000110011001111110101001110011011101001110011110010010000011100111111110111101, cnt: 72

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100001000010, output: 10001011001110111100100110000001000001001110011000000101011011101101010111011111111011100100101101010100001010001101100110100001
xor:01010000111111001001111110101100101100010111000110110111001110011111001100101101010010010010001110011011100101010000111000111111, cnt: 70

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101110011000, output: 10000100101001110000110010111000111000110010111011011100101011000000010001111011100010111010100011000001011111110011000001111000
xor:01011111011000000101101010010101010101101011100101101110111110110010001010001001001011001100000000001110110000101110011111100110, cnt: 64

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001010110110, output: 00011101001101000011100101011011100101011001101000011110000100011010111010001000100101110101111111101001010010111111001001100101
xor:11000110111100110110111101110110001000000000110110101100010001101000100001111010001100000011011100100110111101100010010111111011, cnt: 65

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000011001110, output: 00101001111101000011010101011000001000110100111111111111110111001100001001000111110111111011011001101111100100110110111100001101
xor:11110010001100110110001101110101100101101101100001001101100010111110010010110101011110001101111010100000001011101011100010010011, cnt: 67

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010001101010, output: 10010110001000101100110111011000011000100000110010000010111001111000100000011000110001101101010101001110000001010111110111110011
xor:01001101111001011001101111110101110101111001101100110000101100001010111011101010011000011011110110000001101110001010101001101101, cnt: 70

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011100001111011, output: 10100011111001010000000111001011100100001010111100101000100001001111100111000010001101100110110001110001000101101111001110100101
xor:01111000001000100101011111100110001001010011100010011010110100111101111100110000100100010000010010111110101010110010010000111011, cnt: 62

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101000101101111, output: 10100101111110000000111110001110001100000000010011011000010101001010110000111111010000000000011101000111000110110010110001010100
xor:01111110001111110101100110100011100001011001001101101010000000111000101011001101111001110110111110001000101001101111101111001010, cnt: 70

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100010011010110101101, output: 01001001010010010110111001011101001000000110000111011110000000111101110000010100011110111101101010011100100101000110101110100010
xor:10010010100011100011100001110000100101011111011001101100010101001111101011100110110111001011001001010011001010011011110000111100, cnt: 66

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111110001110001101100, output: 01111101100010011101001110100011000101101100110101110000101101101011101101100001011000010100110111101000111000011000011001001011
xor:10100110010011101000010110001110101000110101101011000010111000011001110110010011110001100010010100100111010111000101000111010101, cnt: 62

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111010011111010100010, output: 01010111100111111011011000111101000101000010110110001001100111000011111100111111000011001101111101100110000101001100100011001010
xor:10001100010110001110000000010000101000011011101000111011110010110001100111001101101010111011011110101001101010010001111101010100, cnt: 63

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000011100110110101111110, output: 11101111010010110100100101110011100100101000011100010111011100010011110001110110000100000100011000001001001000100010100111001000

Test Done. 
++++++++++++++++++ Test avalanche effect  (fibonacci) ++++++++++++++++++++
input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000011011111000110100010, output: 01001010010101000111001000110010111111001010110010001010110001011010100100101010100010010110110110011101010111101111010010010001
xor:11010111101000100111101101101010100011000000000001101100111011010111010001010100110010001010011000001111100110111001000011010111, cnt: 63

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000100100110111001000101, output: 10110011011110100110001100010111000110100110001010011100111110110110011110000110111110011001001101111100000100011110001101110101
xor:00101110100011000110101001001111011010101100111001111010110100111011101011111000101110000101100011101110110101001000011100110011, cnt: 70

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110100100110110110001100, output: 10011011111101011110011110101111011001000011010101010101100001000110001110001001000100101101100001010100000011010000101011100100
xor:00000110000000111110111011110111000101001001100110110011101011001011111011110111010100110001001111000110110010000110111010100010, cnt: 67

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110100011111001001011110, output: 01100000001001101110110110001110011011001101111001000101111001010010000100101110111011011011110110000011010110000111101011111100
xor:11111101110100001110010011010110000111000111001010100011110011011111110001010000101011000111011000010001100111010001111010111010, cnt: 68

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101111011111001010111000, output: 00101110101100000000101111101101000001010011110001010000101010111001111000001111100010110100001111110100011100100101001001001101
xor:10110011010001100000001010110101011101011001000010110110100000110100001101110001110010101000100001100110101101110011011000001011, cnt: 59

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000011101000101011110011, output: 00001010111011110010110011111010000111011001110100011010111001011100011110011100010111100101100010000110101011001100101111111110
xor:10010111000110010010010110100010011011010011000111111100110011010001101011100010000111111001001100010100011010011010111110111000, cnt: 65

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101111100110100100111011, output: 00000111111100011011010110100101100101011011010100110001100001001100011001101000010111100110000000010001110111010110000011011011
xor:10011010000001111011110011111101111001010001100111010111101011000001101100010110000111111010101110000011000110000000010010011101, cnt: 65

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000011100110010000000111, output: 01001110011110110010010000101110011101010100000111111001000110010001111010011001100010100011111011101010001010000110010000011011
xor:11010011100011010010110101110110000001011110110100011111001100011100001111100111110010111111010101111000111011010000000001011101, cnt: 70

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000011101100001100101111, output: 11100011110110111001000101000001011110000001101010100000000011010100101001111001000010101101101011010110101111011011100101010000
xor:01111110001011011001100000011001000010001011011001000110001001011001011100000111010010110001000101000100011110001101110100010110, cnt: 57

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000100101110010101001011, output: 00010100100100100100111111010100111110100100100111101011010010110100011111001001011100110000101000110001000111111011000000001100
xor:10001001011001000100011010001100100010101110010100001101011000111001101010110111001100101100000110100011110110101101010001001010, cnt: 59

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000011110111010100001001, output: 01111010100001110111100001011010111001011111000011100011010111000111101000111001111010000101010100011000011000101000010100001101
xor:11100111011100010111000100000010100101010101110000000101011101001010011101000111101010011001111010001010101001111110000101001011, cnt: 63

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101110101110011010110101, output: 10100011110010110100111001001011010100010010001110111010000110100001011111100011110000110111100010001100001100010111001000011111
xor:00111110001111010100011100010011001000011000111101011100001100101100101010011101100000101011001100011110111101000001011001011001, cnt: 63

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101101101010000110010000, output: 01001000110100101010111010001111000100010101010011000100111000111110011011100101010010101101011111100110110011000000000101010011
xor:11010101001001001010011111010111011000011111100000100010110010110011101110011011000010110001110001110100000010010110010100010101, cnt: 62

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111001111101011001100110, output: 01001000011011000110010010100110011001010101011101001100001001001101110000111000010101111101101111100100100111000010100101001010
xor:11010101100110100110110111111110000101011111101110101010000011000000000101000110000101100001000001110110010110010100110100001100, cnt: 60

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100111011110000010100, output: 00000001100000001001110010110110010000000000111101010100010111101100000111101110101110110010010011100000000011101001100100010010
xor:10011100011101101001010111101110001100001010001110110010011101100001110010010000111110101110111101110010110010111111110101010100, cnt: 71

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000111100100000011, output: 00010001001100011101000110110010000001000111010011100000011011011110110010010100011000010100011111100100000011001010010111011001
xor:10001100110001111101100011101010011101001101100000000110010001010011000111101010001000001000110001110110110010011100000110011111, cnt: 60

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101011100000111001010, output: 01100100100000010000101010001101000000101001001000111010011100111001111100110010011010110001001000100000011011010111100101010010

Test Done. 
++++++++++++++++++ Test avalanche effect  (fibonacci) ++++++++++++++++++++
input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100101100100000110111001, output: 00110000001101000111111010100111101101010011000010110011011000100100000001101010010111100111110001110110110110101110001101101100
xor:10111101011101011110110100010010100111001100000000000001100101011110011100000111000110001111000000110000000011001001000011111001, cnt: 57

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100101011010111010000000, output: 11011111100001100100000001011100010111110011101100011110110010110110000011100101110101111111100101100100110001000001110010100010
xor:01010010110001111101001111101001011101101100101110101100001111001100011110001000100100010111010100100010000100100110111100110111, cnt: 66

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101100010111001011110, output: 01000011110101110101000111110001000010010101000100011000111110010111010011011010011000100001101110110110101000010011111001110001
xor:11001110100101101100001001000100001000001010000110101010000011101101001110110111001001001001011111110000011101110100110111100100, cnt: 61

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100101100011001000001011, output: 01101010100111100111100110000100010111000001101100011010011000111010101100011011101000001011100001000101100101110101010110111110
xor:11100111110111111110101000110001011101011110101110101000100101000000110001110110111001100011010000000011010000010010011000101011, cnt: 64

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110000100000100110000, output: 00110100011100011001100100001100111100011000111010100110011010011001000100110100100010100011101000011001011011011100001001000101
xor:10111001001100000000101010111001110110000111111000010100100111100011011001011001110011001011011001011111101110111011000111010000, cnt: 67

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000000100010010110010, output: 01000110011111001111011000011111110100101100001011010111000011100110101101101001111110110110000100001010000010111100100001101110
xor:11001011001111010110010110101010111110110011001001100101111110011100110000000100101111011110110101001100110111011011101111111011, cnt: 77

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101011010011101101001, output: 10010000111011000001111111101110101100011100010100001011000110100001101110000011111000001100010100000000011011100001110000101001
xor:00011101101011011000110001011011100110000011010110111001111011011011110011101110101001100100100101000110101110000110111110111100, cnt: 71

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100101100100110011101010, output: 10000011101011011011000111100011111110111111000111110010000101110110101010001011111010010011110101001000111000101010100011101110
xor:00001110111011000010001001010110110100100000000101000000111000001100110111100110101011111011000100001110001101001101101101111011, cnt: 61

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110001000001101011000, output: 11100010011100001110001111101101000011111011111100000111100011001111100110111011011101100110111001101110110101011110000001100110
xor:01101111001100010111000001011000001001100100111110110101011110110101111011010110001100001110001000101000000000111001001111110011, cnt: 64

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000001010010101100111, output: 01011101001110001101010100010111111010010011010101000011000011100101110110111111110001001110100011000110100011100000111110010111
xor:11010000011110010100011010100010110000001100010111110001111110011111101011010010100000100110010010000000010110000111110000000010, cnt: 56

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100111010110001000001, output: 11110100011010100110000010100110010010100110011111010100010111001010110110010101111110000001110100111100001010001111101110110100
xor:01111001001010111111001100010011011000111001011101100110101010110000101011111000101111101001000101111010111111101000100000100001, cnt: 68

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100101010011100011001, output: 11110001011100011010011010101011111101101100111101000110001101100011010001001100011010001001000101010000101101100111100100000101
xor:01111100001100000011010100011110110111110011111111110100110000011001001100100001001011100001110100010110011000000000101010010000, cnt: 59

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100010101111100110011110, output: 00110101110010001000101010101001100111111110000110000100110010010001101000011011000110110101101011110010010000011001011011010100
xor:10111000100010010001100100011100101101100001000100110110001111101011110101110110010111011101011010110100100101111110010101000001, cnt: 66

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101011010111100010011101, output: 00100101000101110100000111110011000000000101101100101000010010010000011101101001000100100010010101111110110000111011111001101100
xor:10101000010101101101001001000110001010011010101110011010101111101010000000000100010101001010100100111000000101011100110111111001, cnt: 59

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110100110101110100011011, output: 01101001001010000110100100101000010011001000110000110101001001000000011110001001000100111110100011111101011011110101111111010101
xor:11100100011010011111101010011101011001010111110010000111110100111010000011100100010101010110010010111011101110010010110001000000, cnt: 65

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000011011011010111, output: 00100010100111111111000001101101001101100110111101110011001100011101000010101001101011111100110111011100111111000101100011010001
xor:10101111110111100110001111011000000111111001111111000001110001100111011111000100111010010100000110011010001010100010101101000100, cnt: 67

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101111100001001100, output: 00111101111110000010101101100011010110101100101111110100011100000100001111110101011010100110010100010100111011010001100000100100

Test Done. 
++++++++++++++++++ Test avalanche effect  (fibonacci) ++++++++++++++++++++
input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110011011000111000, output: 00111010100100111110010011011010010111100000100100110011100100110010110110111111111100110111010011100010000100010110000010001011
xor:00001011110001101011101011011011011100011101000010101001100101101111100100010101110110000101110111110100101001101000010010110111, cnt: 68

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101111011001100001, output: 10101110010011110010111111100111110111110011010110011100111110001111111001100010100001101110111110101100110000110000010000100111
xor:10011111000110100111000111100110111100001110110000000110111111010010101011001000101011011100011010111010011101001110000000011011, cnt: 67

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000011010110100111, output: 11100010010001111110110010111011100101011101011011000001001111010110101111111101100100010010110001010001010000011101011111101000
xor:11010011000100101011001010111010101110100000111101011011001110001011111101010111101110100000010101000111111101100011001111010100, cnt: 70

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101111100010011101, output: 10001011010000010010011111101100110011010111001000101100010100110111000110100110110000001111001101001011101011010101001010101001
xor:10111010000101000111100111101101111000101010101110110110010101101010010100001100111010111101101001011101000110101011011010010101, cnt: 70

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000011010011101101, output: 01110011101011100101101001011011101000000010000100000010110110001000101001000101001101101100001100100001111101001111000010001110
xor:01000010111110110000010001011010100011111111100010011000110111010101111011101111000111011110101000110111010000110001010010110010, cnt: 68

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110100010001011001, output: 11110110111011010011011000011101110110010110010110110111110101000011101101011001111100110010100111110110101111101000011000100001
xor:11000111101110000110100000011100111101101011110000101101110100011110111111110011110110000000000011100000000010010110001000011101, cnt: 63

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110010110110000111, output: 10011010110111111101000010101110100110000011001111111001001000011111000011100000000010000001101011100100110011111101011100011110
xor:10101011100010101000111010101111101101111110101001100011001001000010010001001010001000110011001111110010011110000011001100100010, cnt: 62

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101110011100011011, output: 10101000011000000010101011010110110111000110011101110110010100100001110110100001010100100111110000000101110011101000000111101001
xor:10011001001101010111010011010111111100111011111011101100010101111100100100001011011110010101010100010011011110010110010111010101, cnt: 73

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101011111110110100, output: 00110101101011110000100101011110011001011010000111110001000001000100011001010011111110100110000000100010010101010010010110000101
xor:00000100111110100101011101011111010010100111100001101011000000011001001011111001110100010100100100110100111000101100000110111001, cnt: 62

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100111110111111111, output: 01000010000100101100010011000111110100100000001111101110010111001110101101000010011011010010001010010010011010100110011001001010
xor:01110011010001111001101011000110111111011101101001110100010110010011111111101000010001100000101110000100110111011000001001110110, cnt: 68

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010100101001100100, output: 10010010001011100100110000011101110010000111111011001011111011101110110001111100111010100100011011011111111010100001010001110011
xor:10100011011110110001001000011100111001111010011101010001111010110011100011010110110000010110111111001001010111011111000001001111, cnt: 70

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000011011000, output: 10110101000011000100110110000001100000011011110111001101000011100010000001000111000100111001110010000011100111110001000111011011
xor:10000100010110010001001110000000101011100110010001010111000010111111010011101101001110001011010110010101001010001111010111100111, cnt: 63

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000100000010001001, output: 11101000000100111100111000000001000010000101001010101011101000101010011100111100111100100111010011001111001100111110011100000010
xor:11011001010001101001000000000000001001111000101100110001101001110111001110010110110110010101110111011001100001000000001100111110, cnt: 59

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101100010001101111101, output: 10110111101100010100100010000111001000100010001100001110000000111011100101011001001101101001000110010111111111100101100110111100
xor:10000110111001000001011010000110000011011111101010010100000001100110110111110011000111011011100010000001010010011011110110000000, cnt: 58

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011100000101001100010, output: 10010001000111011000110000101001010101101100110010111010101110000000000101110000111101110001010000011000111000000010010110001000
xor:10100000010010001101001000101000011110010001010100100000101111011101010111011010110111000011110100001110010101111100000110110100, cnt: 60

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011000100000011101110, output: 11110100011101001100111001011011001011010000011101001100011010100001110111011110101111101110000100110111011100111100100111010010
xor:11000101001000011001000001011010000000101101111011010110011011111100100101110100100101011100100000100001110001000010110111101110, cnt: 60

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111000011110101101, output: 00100101011111111000111000100110001011001010011011010100000000001100001011100001011100001101001010001100001111001001000111000101

Test Done. 
++++++++++++++++++ Test avalanche effect  (fibonacci) ++++++++++++++++++++
input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100110110011110101110, output: 01110110011111001110110011101001100101011010111011000110110000010011100111011001001100001100101001110001111110000101110011110011
xor:01001101101010111000111101111100001010001011111110111100101101011011001101001010110001010010001111011001000111001100110001000101, cnt: 68

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000110100110011011, output: 11010010011010111111110010101101111110011000110101000100011101000010011111011001111001100110011110111010010001101101011110010100
xor:11101001101111001001111100111000010001001001110000111110000000001010110101001010000100111000111000010010101000100100011100100010, cnt: 56

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000110101001010101, output: 10101100010111011110110010110000101000100000011111010101111111010000001111100000000101111010111110011100001001001101111111111001
xor:10010111100010101000111100100101000111110001011010101111100010011000100101110011111000100100011000110100110000000100111101001111, cnt: 63

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000101111101011000, output: 00001011010101001000001110110101101000001010011111000110011010001011011000011001001101101001011101001101100101100000101001011001
xor:00110000100000111110000000100000000111011011011010111100000111000011110010001010110000110111111011100101011100101001101011101111, cnt: 63

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000110101100001100, output: 00101011101011011111110011101100000000111100011001100111101100000110010010000011011101001000001101100000111110010001101010110000
xor:00010000011110101001111101111001101111101101011100011101110001001110111000010000100000010110101011001000000111011000101000000110, cnt: 61

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000110011000111000, output: 10001010001110101111110011111111010110111011110011110010101110001100111111010110101000100011011101111110010111111001010101100100
xor:10110001111011011001111101101010111001101010110110001000110011000100010101000101010101111101111011010110101110110000010111010010, cnt: 70

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101001000001101010101, output: 00011000100010010001111000000000110010011011101101100110010111001011111111011001000100010100100100011111101011001111110110001001
xor:00100011010111100111110110010101011101001010101000011100001010000011010101001010111001001010000010110111010010000110110100111111, cnt: 63

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110111100011010110, output: 11100100100100101001010011101010000100000011000010000011100101100001011011100010110001001101010100001101101011101001111100000110
xor:11011111010001011111011101111111101011010010000111111001111000101001110001110001001100010011110010100101010010100000111110110000, cnt: 70

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100110100100010100101, output: 11111101011100110010111011100000010011010100010001101110001101111111000101110101000001100100010110100101000100000110011010101001
xor:11000110101001000100110101110101111100000101010100010100010000110111101111100110111100111010110000001101111101001111011000011111, cnt: 69

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000001001111101111, output: 11011100011000101011101001011001101010000000100011000101111000010100010101100111000010110101111011001100101110010101110010000000
xor:11100111101101011101100111001100000101010001100110111111100101011100111111110100111111101011011101100100010111011100110000110110, cnt: 77

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100110011000100000, output: 01011010111001001011110100110100101010000101111110111100101010100101110101010011001111110010100011000000111010011110000110011011
xor:01100001001100111101111010100001000101010100111011000110110111101101011111000000110010101100000101101000000011010111000100101101, cnt: 62

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001100111100100101, output: 11011010001110101100101101001110011110001000000001100001001101001101000011010101000000001110100110101011111001000111110110110001
xor:11100001111011011010100011011011110001011001000100011011010000000101101001000110111101010000000000000011000000001110110100000111, cnt: 55

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111001000000110111111, output: 00110110001101101010111011111110000001100010111000010001110110101011011010010111111101000101110000011000010111000110000111010101
xor:00001101111000011100110101101011101110110011111101101011101011100011110000000100000000011011010110110000101110001111000101100011, cnt: 66

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100010010010000001, output: 00111101101011101001101010100111011100000110000110101001000010110101110000100011110111110100000001101011111111100111101010111100
xor:00000110011110011111100100110010110011010111000011010011011111111101011010110000001010101010100111000011000110101110101000001010, cnt: 65

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011100100000100001010, output: 01101110010001111110010110011010010011111111001010010100000001011011101000111111011001000011011101001101110101001101110001001100
xor:01010101100100001000011000001111111100101110001111101110011100010011000010101100100100011101111011100101001100000100110011111010, cnt: 64

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110110110001100011101, output: 00111101100011000110110110011010011011001001001010000010100000111100101101111101010100101000000100011101010011001110100011001111
xor:00000110010110110000111000001111110100011000001111111000111101110100000111101110101001110110100010110101101010000111100001111001, cnt: 66

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111111101111, output: 10000010111101100011100100100010010010001100010001110000100001010101001010001101110101101111001110001100111111100010100010111110

Test Done. 
++++++++++++++++++ Test avalanche effect  (fibonacci) ++++++++++++++++++++
input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101001101010, output: 10100101010001000000010101000000010011001110101011001010000011110001101010110110110011000111000110100010100000110011111010111100
xor:00110000011010111011111000100011101000010001110001110010110011100101100101110000101101011010100100101110101010101011100010101000, cnt: 62

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101001100110, output: 10110000010111011001011110011010110110101010100001101011000010111111111001101101001001110110101010110011111111000011010001001011
xor:00100101011100100010110011111001001101110101111011010011110010101011110110101011010111101011001000111111110101011011001001011111, cnt: 76

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111111010110, output: 11000111010001111010010111110101001100000110010001100111001100101110011001001001010100111100000010010111000101110011110110110010
xor:01010010011010000001111010010110110111011001001011011111111100111010010110001111001010100001100000011011001111101011101110100110, cnt: 69

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101100001111, output: 11101011110000110010101000010000011001101110110110101100010001001010011100111111001001100110000100011010111001011000010111000110
xor:01111110111011001001000101110011100010110001101100010100100001011110010011111001010111111011100110010110110011000000001111010010, cnt: 67

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101000000101, output: 00100101100001100110000011111001000010000000000100100011011101110010000100101100010001100100100001110010011110110100101111101110
xor:10110000101010011101101110011010111001011111011110011011101101100110001011101010001111111001000011111110010100101100110111111010, cnt: 76

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010110011100110, output: 00111110000100110101000010101010110100010000111101001010011011111001001010001011000010011001000110101101011001001110101111101110
xor:10101011001111001110101111001001001111001111100111110010101011101101000101001101011100000100100100100001010011010110110111111010, cnt: 70

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010010010101011, output: 01111110101100110111001010110000111101000010100111010011100101111111000101000101100000100001100110110110101100101100101101001110
xor:11101011100111001100100111010011000110011101111101101011010101101011001010000011111110111100000100111010100110110100110101011010, cnt: 72

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111010111010011, output: 00101101111001100001000011110111010100101100010111001001001101011011001000001010101110110101100001010111010011000001001111011110
xor:10111000110010011010101110010100101111110011001101110001111101001111000111001100110000101000000011011011011001011001010111001010, cnt: 67

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000011011011110, output: 10001010110001011010010011011111110011011100001000000010010001010111110101000111101101010100101010110110000101100010110110101101
xor:00011111111010100001111110111100001000000011010010111010100001000011111010000001110011001001001000111010001111111010101110111001, cnt: 65

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100010110010111, output: 00111111111010011010100101010000111011100100001011111100000101101111101010110011101110011101000011111010101001010011101100110100
xor:10101010110001100001001000110011000000111011010001000100110101111011100101110101110000000000100001110110100011001011110100100000, cnt: 56

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100100000101010101, output: 01010000000001011111101011101100010110000111001100011011011010110110011010111011010000111111111101100111000111010000110011001000
xor:11000101001010100100000110001111101101011000010110100011101010100010010101111101001110100010011111101011001101001000101011011100, cnt: 64

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101110111101101001, output: 10110101110111000100100001001001110101001011100010010111100111000010011011001101111000100110110110011001111111101010010101000101
xor:00100000111100111111001100101010001110010100111000101111010111010110010100001011100110111011010100010101110101110010001101010001, cnt: 66

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001010001010101010, output: 00000110001000100111001111001110010001111000110100111110110011111101111100011001000000010110100011000101110001000101110110101010
xor:10010011000011011100100010101101101010100111101110000110000011101001110011011111011110001011000001001001111011011101101110111110, cnt: 70

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100101001001100001110, output: 11010111111011001010101010110111100010101110001101010011011000100000000001010010101111100101111011101000001101000001000000100000
xor:01000010110000110001000111010100011001110001010111101011101000110100001110010100110001111000011001100100000111011001011000110100, cnt: 58

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010100101100100111110, output: 01000101110010111011111111000101000001101001111001010110111000010101101010111111111101101100011110110110010101101010101011100001
xor:11010000111001000000010010100110111010110110100011101110001000000001100101111001100011110001111100111010011111110010110011110101, cnt: 66

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001101001101110000110, output: 01001101010100001111110011000010000110001110011100001100000000001110010100101000001111110111011111100011001001111100000111111100
xor:11011000011111110100011110100001111101010001000110110100110000011010011011101110010001101010111101101111000011100100011111101000, cnt: 69

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110000101110111010011010, output: 00100110011000001100111011010110110000010101100000010011111110000001011000100011011011101110011011000011000001111111110101111000

Test Done. 
++++++++++++++++++ Test avalanche effect  (fibonacci) ++++++++++++++++++++
input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000110010111001111111, output: 11110110001111110101010011011101011000111100111100101010001111100011001001001010111101000111000011011110011000111110101011001101
xor:01001101010011000011000101111111111101101110011001101110000101001000111101101011010010000001001100011101011101010100011111111010, cnt: 69

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000101110111010010100, output: 11111110010110011011111011110010110011110010111101001011000001111100001100010001100101000111010111110000010000110100000101111100
xor:01000101001010101101101101010000010110100000011000001111001011010111111000110000001010000001011000110011010101011110110001001011, cnt: 58

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101101000011001001101000, output: 11011111111001010000010001011110011100011110000111101101011111000100011101100010011010000111010010000000111001101110100001011101
xor:01100100100101100110000111111100111001001100100010101001010101101111101001000011110101000001011101000011111100000100010101101010, cnt: 62

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110000110010111100011010, output: 10011000111001010111100100001100111011011111101001011011110000111000010010010001101010100111101101101101100100101011000100110101
xor:00100011100101100001110010101110011110001101001100011111111010010011100110110000000101100001100010101110100001000001110000000010, cnt: 57

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110001000011001110000010, output: 00011110001111010010011100011000010001111000011110001010101101100011101011110110100110001010010111110000100001111101111000111000
xor:10100101010011100100001010111010110100101010111011001110100111001000011111010111001001001100011000110011100100010111001100001111, cnt: 65

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101011110100000010101010, output: 11000101100010001111100011100100100000111011001000100111001011001000111101101100101000010100101000111101010011101101110111111100
xor:01111110111110111001110101000110000101101001101101100011000001100011001001001101000111010010100111111110010110000111000011001011, cnt: 67

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101011101110101000111001, output: 11100111100010011111100111100111101101111100111100111101100110011110000011101011000110110011001001111100111000010010000100100101
xor:01011100111110101001110001000101001000101110011001111001101100110101110111001010101001110101000110111111111101111000110000010010, cnt: 70

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001101101011011, output: 10111001111011111001101101011101010000011010111000000100001010110001010100010010011110010101011010101001110100000010010100010100
xor:00000010100111001111111011111111110101001000011101000000000000011010100000110011110001010011010101101010110001101000100000100011, cnt: 58

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110000111000010011000000, output: 11001010101101000001011010000110001110010110000010010100100001101000101001011000001100010110001001000000111111010001010101001111
xor:01110001110001110111001100100100101011000100100111010000101011000011011101111001100011010000000110000011111010111011100001111000, cnt: 62

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101011110111111001001001, output: 01111000101111011011000110101000101100010100001010101100001000111011100011101010101001001011011100100110111010100001101010001000
xor:11000011110011101101010000001010001001000110101111101000000010010000010111001011000110001101010011100101111111001011011110111111, cnt: 65

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001010100010101011011, output: 10101100100111001010110000110110110000100110010100010110001001101001000000110010111111110100000101110101111100111010000010101101
xor:00010111111011111100100110010100010101110100110001010010000011000010110100010011010000110010001010110110111001010000110110011010, cnt: 60

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001011111100101110010, output: 00000100100001100110101101001001000001100100110101111101101110010001000000011010110111000011101000011011110111011001111110100100
xor:10111111111101010000111011101011100100110110010000111001100100111010110100111011011000000101100111011000110010110011001010010011, cnt: 69

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000100000010011010110111, output: 11110110111010110111001000011111000001100100011100011101000001000011011111010101111001000110010001000011000100011000100101010110
xor:01001101100110000001011110111101100100110110111001011001001011101000101011110100010110000000011110000000000001110010010001100001, cnt: 57

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001000000001011011011010, output: 01100100100010001011111111010011110101001110011111010011100111000010101010010011011001000100101101101110001100010101010011101110
xor:11011111111110111101101001110001010000011100111010010111101101101001011110110010110110000010100010101101001001111111100111011001, cnt: 75

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111011000101110001101, output: 10000100000010110011101111101100101101000001100100010111110011111001101010101101000011011101000101001101101011111100100001000110
xor:00111111011110000101111001001110001000010011000001010011111001010010011110001100101100011011001010001110101110010110010101110001, cnt: 64

input: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010010011011101100000, output: 01111100101001000101101000001011101011111111010000000010100100110100010011011001101101010101001101100000101100001101100100001010
xor:11000111110101110011111110101001001110101101110101000110101110011111100111111000000010010011000010100011101001100111010000111101, cnt: 71

