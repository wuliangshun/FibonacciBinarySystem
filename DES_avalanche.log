# -----------------Encrypt--------------------*/
# input: 3b98d2eeaeb60035, binary: 0011101110011000110100101110111010101110101101100000000000110101, output: 6305e6ff626a4f0b, binary:0110001100000101111001101111111101100010011010100100111100001011
# 
# -----------------Decrypt--------------------*/
# input: 6305e6ff626a4f0b, output: 3b98d2eeaeb60035
# 
# -----------------Test avalanche effect--------------------*/
# input: 0011101110011000110100101110111010101110101101100000000000110100, output: 0000101010111010101110101011111101011110000011101111100000110001
# 
# xor:0110100110111111010111000100000000111100011001001011011100111010, cnt: 33
# 
# input: 0011101110011000110100101110111010101110101101100000000000110111, output: 1000011010010011011101000110101001100101000100100111010111000001
# 
# xor:1110010110010110100100101001010100000111011110000011101011001010, cnt: 31
# 
# input: 0011101110011000110100101110111010101110101101100000000000110001, output: 1000101110100100001000010010010011110011010100111100000000011010
# 
# xor:1110100010100001110001111101101110010001001110011000111100010001, cnt: 32
# 
# input: 0011101110011000110100101110111010101110101101100000000000111101, output: 0000011010100010101100011111010100011101001011000101010110010001
# 
# xor:0110010110100111010101110000101001111111010001100001101010011010, cnt: 33
# 
# input: 0011101110011000110100101110111010101110101101100000000000100101, output: 0101001100101110001110101100000010110000010100100001010101010001
# 
# xor:0011000000101011110111000011111111010010001110000101101001011010, cnt: 32
# 
# input: 0011101110011000110100101110111010101110101101100000000000010101, output: 1111101110110110100111011000001110100111100100100111101100010010
# 
# xor:1001100010110011011110110111110011000101111110000011010000011001, cnt: 34
# 
# input: 0011101110011000110100101110111010101110101101100000000001110101, output: 0011110101110000011011001111001010000101110101001000101001011001
# 
# xor:0101111001110101100010100000110111100111101111101100010101010010, cnt: 35
# 
# input: 0011101110011000110100101110111010101110101101100000000010110101, output: 0110110101000100110111110101101011101011010000000100011000100111
# 
# xor:0000111001000001001110011010010110001001001010100000100100101100, cnt: 24
# 
# input: 0011101110011000110100101110111010101110101101100000000100110101, output: 0000111010011111001110000111011110010111110011101010101000110100
# 
# xor:0110110110011010110111101000100011110101101001001110010100111111, cnt: 37
# 
# input: 0011101110011000110100101110111010101110101101100000001000110101, output: 1010000011100010101100110010011101100110011011000011011100110111
# 
# xor:1100001111100111010101011101100000000100000001100111100000111100, cnt: 29
# 
# input: 0011101110011000110100101110111010101110101101100000010000110101, output: 1111110100010111001101110010110001001101101010010110110110011101
# 
# xor:1001111000010010110100011101001100101111110000110010001010010110, cnt: 31
# 
# input: 0011101110011000110100101110111010101110101101100000100000110101, output: 0111010011110110101100010100100101101101111001001111110001100011
# 
# xor:0001011111110011010101111011011000001111100011101011001101101000, cnt: 36
# 
# input: 0011101110011000110100101110111010101110101101100001000000110101, output: 0110111001101110001111100100000010000000111010100111101111111010
# 
# xor:0000110101101011110110001011111111100010100000000011010011110001, cnt: 32
# 
# input: 0011101110011000110100101110111010101110101101100010000000110101, output: 1001000001110111100010110110000100111110101001100111000101010101
# 
# xor:1111001101110010011011011001111001011100110011000011111001011110, cnt: 38
# 
# input: 0011101110011000110100101110111010101110101101100100000000110101, output: 0011010000000010110001111000101101011011000000100100000110010000
# 
# xor:0101011100000111001000010111010000111001011010000000111010011011, cnt: 29
# 
# input: 0011101110011000110100101110111010101110101101101000000000110101, output: 1101101001101000101111001010001101110100101111111010000010111100
# 
# xor:1011100101101101010110100101110000010110110101011110111110110111, cnt: 39
# 
# input: 0011101110011000110100101110111010101110101101110000000000110101, output: 0011010110000000100110100110010101011000111101010010100000010010
# 
# xor:0101011010000101011111001001101000111010100111110110011100011001, cnt: 34
# 
# input: 0011101110011000110100101110111010101110101101000000000000110101, output: 0011100001110111101010011001110111011110100111001100101100111001
# 
# xor:0101101101110010010011110110001010111100111101101000010000110010, cnt: 33
# 
# input: 0011101110011000110100101110111010101110101100100000000000110101, output: 0001110100010001111111101110110101011101001110110011100000001001
# 
# xor:0111111000010100000110000001001000111111010100010111011100000010, cnt: 28
# 
# input: 0011101110011000110100101110111010101110101111100000000000110101, output: 0000010101001010011000010011110111101010110000111100110110011011
# 
# xor:0110011001001111100001111100001010001000101010011000001010010000, cnt: 26
# 
# input: 0011101110011000110100101110111010101110101001100000000000110101, output: 1100101011101001111110111000010001111010010001110011100101110100
# 
# xor:1010100111101100000111010111101100011000001011010111011001111111, cnt: 37
# 
# input: 0011101110011000110100101110111010101110100101100000000000110101, output: 0100001000101100000111011111110010010010001111001111100101000011
# 
# xor:0010000100101001111110110000001111110000010101101011011001001000, cnt: 29
# 
# input: 0011101110011000110100101110111010101110111101100000000000110101, output: 1111000100101000011010110111111011110000100011101010100111000110
# 
# xor:1001001000101101100011011000000110010010111001001110011011001101, cnt: 30
# 
# input: 0011101110011000110100101110111010101110001101100000000000110101, output: 1001101000101001010001010110000001011011010101111001100001101111
# 
# xor:1111100100101100101000111001111100111001001111011101011101100100, cnt: 37
# 
# input: 0011101110011000110100101110111010101111101101100000000000110101, output: 1001010101010001101100111100011111100100011111101110100110111001
# 
# xor:1111011001010100010101010011100010000110000101001010011010110010, cnt: 29
# 
# input: 0011101110011000110100101110111010101100101101100000000000110101, output: 1010010011010100011000011101011101111010000000010110001101100111
# 
# xor:1100011111010001100001110010100000011000011010110010110001101100, cnt: 29
# 
# input: 0011101110011000110100101110111010101010101101100000000000110101, output: 0110101001011010110101101100110011101010110011101101111001100010
# 
# xor:0000100101011111001100000011001110001000101001001001000101101001, cnt: 26
# 
# input: 0011101110011000110100101110111010100110101101100000000000110101, output: 0001011000101101011110010000100111110010011001001011110011000101
# 
# xor:0111010100101000100111111111011010010000000011101111001111001110, cnt: 35
# 
# input: 0011101110011000110100101110111010111110101101100000000000110101, output: 0110011010101010011000001010001100100001000111100111000100011011
# 
# xor:0000010110101111100001100101110001000011011101000011111000010000, cnt: 28
# 
# input: 0011101110011000110100101110111010001110101101100000000000110101, output: 0001001101100100000100000001011101100000011001111010110011101000
# 
# xor:0111000001100001111101101110100000000010000011011110001111100011, cnt: 30
# 
# input: 0011101110011000110100101110111011101110101101100000000000110101, output: 0000000011100010100010011011001111011100010110111111010111010111
# 
# xor:0110001111100111011011110100110010111110001100011011101011011100, cnt: 38
# 
# input: 0011101110011000110100101110111000101110101101100000000000110101, output: 1000000010000100100001010110111000000101111100011110010001100011
# 
# xor:1110001110000001011000111001000101100111100110111010101101101000, cnt: 32
# 
# input: 0011101110011000110100101110111110101110101101100000000000110101, output: 1101011110110010100101000101110100100011101010111100010010111100
# 
# xor:1011010010110111011100101010001001000001110000011000101110110111, cnt: 32
# 
# input: 0011101110011000110100101110110010101110101101100000000000110101, output: 1111000001001110100101110010011111111110111000101001110010011100
# 
# xor:1001001101001011011100011101100010011100100010001101001110010111, cnt: 32
# 
# input: 0011101110011000110100101110101010101110101101100000000000110101, output: 0000000110001111111101100101001001001100100011100011101101000010
# 
# xor:0110001010001010000100001010110100101110111001000111010001001001, cnt: 27
# 
# input: 0011101110011000110100101110011010101110101101100000000000110101, output: 0011111000010010100011011001011011011111010000011101111000110100
# 
# xor:0101110100010111011010110110100110111101001010111001000100111111, cnt: 37
# 
# input: 0011101110011000110100101111111010101110101101100000000000110101, output: 0110010100100101101011001100001111110101000011110111001101101100
# 
# xor:0000011000100000010010100011110010010111011001010011110001100111, cnt: 28
# 
# input: 0011101110011000110100101100111010101110101101100000000000110101, output: 1111111010100111101000111011010101101001101011110011110100001100
# 
# xor:1001110110100010010001010100101000001011110001010111001000000111, cnt: 28
# 
# input: 0011101110011000110100101010111010101110101101100000000000110101, output: 0001001110111010111101101110110010010000000111101001000011101010
# 
# xor:0111000010111111000100000001001111110010011101001101111111100001, cnt: 34
# 
# input: 0011101110011000110100100110111010101110101101100000000000110101, output: 1101001001011001100001100100010101111010111111001010010110101000
# 
# xor:1011000101011100011000001011101000011000100101101110101010100011, cnt: 30
# 
# input: 0011101110011000110100111110111010101110101101100000000000110101, output: 1001101011010011110000111000101111010101110001101110100101000001
# 
# xor:1111100111010110001001010111010010110111101011001010011001001010, cnt: 35
# 
# input: 0011101110011000110100001110111010101110101101100000000000110101, output: 0111001111101001010001101110100000001101011100010001001101011001
# 
# xor:0001000011101100101000000001011101101111000110110101110001010010, cnt: 29
# 
# input: 0011101110011000110101101110111010101110101101100000000000110101, output: 0111111001001100000000110111000110011001111101110011001011000100
# 
# xor:0001110101001001111001011000111011111011100111010111110111001111, cnt: 40
# 
# input: 0011101110011000110110101110111010101110101101100000000000110101, output: 1001100011010001000111101001001011110110001011111001111000010110
# 
# xor:1111101111010100111110000110110110010100010001011101000100011101, cnt: 35
# 
# input: 0011101110011000110000101110111010101110101101100000000000110101, output: 0001000101100101011100011000011101000100001111010101110100000101
# 
# xor:0111001001100000100101110111100000100110010101110001001000001110, cnt: 28
# 
# input: 0011101110011000111100101110111010101110101101100000000000110101, output: 0110100010111000011000110101111101010110010011100101110110111100
# 
# xor:0000101110111101100001011010000000110100001001000001001010110111, cnt: 27
# 
# input: 0011101110011000100100101110111010101110101101100000000000110101, output: 0101010100001101011000101100010101010110100000010110001101000100
# 
# xor:0011011000001000100001000011101000110100111010110010110001001111, cnt: 28
# 
# input: 0011101110011000010100101110111010101110101101100000000000110101, output: 0110011111111110110110101101011010000011110010101110111010100101
# 
# xor:0000010011111011001111000010100111100001101000001010000110101110, cnt: 29
# 
# input: 0011101110011001110100101110111010101110101101100000000000110101, output: 0011111001011010101001110011010110001101011100111000001111001111
# 
# xor:0101110101011111010000011100101011101111000110011100110011000100, cnt: 34
# 
# input: 0011101110011010110100101110111010101110101101100000000000110101, output: 1001100010001110111110111101010011100110101101011010011001001011
# 
# xor:1111101110001011000111010010101110000100110111111110100101000000, cnt: 34
# 
# input: 0011101110011100110100101110111010101110101101100000000000110101, output: 1101110111101011001111111100000000010100010000010100111110110011
# 
# xor:1011111011101110110110010011111101110110001010110000000010111000, cnt: 36
# 
# input: 0011101110010000110100101110111010101110101101100000000000110101, output: 1001000001001001101011000011111010100110000110111011010011110000
# 
# xor:1111001101001100010010101100000111000100011100011111101111111011, cnt: 36
# 
# input: 0011101110001000110100101110111010101110101101100000000000110101, output: 0110011111010001111110101010110111001011001110011110010100101011
# 
# xor:0000010011010100000111000101001010101001010100111010101000100000, cnt: 24
# 
# input: 0011101110111000110100101110111010101110101101100000000000110101, output: 0101000010011101100000000010100001100001010111011010000001011000
# 
# xor:0011001110011000011001101101011100000011001101111110111101010011, cnt: 35
# 
# input: 0011101111011000110100101110111010101110101101100000000000110101, output: 1110000011001101101001111111001011001011011001101000000110111001
# 
# xor:1000001111001000010000010000110110101001000011001100111010110010, cnt: 26
# 
# input: 0011101100011000110100101110111010101110101101100000000000110101, output: 0010100101110011001011100101001000110101010010101110101111100111
# 
# xor:0100101001110110110010001010110101010111001000001010010011101100, cnt: 30
# 
# input: 0011101010011000110100101110111010101110101101100000000000110101, output: 1010001001001001001111111010001001101101001100111101101000001011
# 
# xor:1100000101001100110110010101110100001111010110011001010100000000, cnt: 28
# 
# input: 0011100110011000110100101110111010101110101101100000000000110101, output: 0001001011011111001100000001101100101100001110001000010111110110
# 
# xor:0111000111011010110101101110010001001110010100101100101011111101, cnt: 36
# 
# input: 0011111110011000110100101110111010101110101101100000000000110101, output: 1111000001001110111100100011100101010100001011010101101101100011
# 
# xor:1001001101001011000101001100011000110110010001110001010001101000, cnt: 27
# 
# input: 0011001110011000110100101110111010101110101101100000000000110101, output: 0100000110100000101010011011001000111110000011100010101010110101
# 
# xor:0010001010100101010011110100110101011100011001000110010110111110, cnt: 32
# 
# input: 0010101110011000110100101110111010101110101101100000000000110101, output: 0101010111111010111111111111100110010101011100011110101110000101
# 
# xor:0011011011111111000110010000011011110111000110111010010010001110, cnt: 35
# 
# input: 0001101110011000110100101110111010101110101101100000000000110101, output: 0010111111001001101101100000110010100001111010101001111101101001
# 
# xor:0100110011001100010100001111001111000011100000001101000001100010, cnt: 26
# 
# input: 0111101110011000110100101110111010101110101101100000000000110101, output: 0001001101100000000010111000000101001001011001000100100100100011
# 
# xor:0111000001100101111011010111111000101011000011100000011000101000, cnt: 30
# 
# input: 1011101110011000110100101110111010101110101101100000000000110101, output: 0001101110111010010111101100111110000010110100110101000111101001
# 
# xor:0111100010111111101110000011000011100000101110010001111011100010, cnt: 33